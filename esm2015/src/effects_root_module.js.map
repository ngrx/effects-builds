{"version":3,"file":"effects_root_module.js","sourceRoot":"ng://@ngrx/effects/","sources":["src/effects_root_module.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC3D,OAAO,EACL,YAAY,EAEZ,KAAK,EACL,eAAe,EACf,kBAAkB,GACnB,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,YAAY,EAAE,mBAAmB,EAAE,MAAM,UAAU,CAAC;;AAE7D,MAAM,OAAO,iBAAiB,GAAG,oBAAoB;;AACrD,MAAM,OAAO,eAAe,GAAG,YAAY,CAAC,iBAAiB,CAAC;AAG9D,MAAM,OAAO,iBAAiB;;;;;;;;;;IAC5B,YACU,OAAsB,EAC9B,MAAqB,EACrB,KAAiB,EACK,WAAkB,EAC5B,eAAgC,EAChC,kBAAsC,EAGlD,KAAU;QARF,YAAO,GAAP,OAAO,CAAe;QAU9B,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,WAAW,CAAC,OAAO;;;;QAAC,oBAAoB,CAAC,EAAE,CACzC,OAAO,CAAC,UAAU,CAAC,oBAAoB,CAAC,EACzC,CAAC;QAEF,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;IAC9C,CAAC;;;;;IAED,UAAU,CAAC,oBAAyB;QAClC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAChD,CAAC;;;YAxBF,QAAQ,SAAC,EAAE;;;;YANH,aAAa;YADb,aAAa;YAJpB,KAAK;wCAiBF,MAAM,SAAC,YAAY;YAhBtB,eAAe,uBAiBZ,QAAQ;YAhBX,kBAAkB,uBAiBf,QAAQ;4CACR,QAAQ,YACR,MAAM,SAAC,mBAAmB;;;;;;;IAP3B,oCAA8B","sourcesContent":["import { NgModule, Inject, Optional } from '@angular/core';\nimport {\n  createAction,\n  StoreModule,\n  Store,\n  StoreRootModule,\n  StoreFeatureModule,\n} from '@ngrx/store';\nimport { EffectsRunner } from './effects_runner';\nimport { EffectSources } from './effect_sources';\nimport { ROOT_EFFECTS, _ROOT_EFFECTS_GUARD } from './tokens';\n\nexport const ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nexport const rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\n\n@NgModule({})\nexport class EffectsRootModule {\n  constructor(\n    private sources: EffectSources,\n    runner: EffectsRunner,\n    store: Store<any>,\n    @Inject(ROOT_EFFECTS) rootEffects: any[],\n    @Optional() storeRootModule: StoreRootModule,\n    @Optional() storeFeatureModule: StoreFeatureModule,\n    @Optional()\n    @Inject(_ROOT_EFFECTS_GUARD)\n    guard: any\n  ) {\n    runner.start();\n\n    rootEffects.forEach(effectSourceInstance =>\n      sources.addEffects(effectSourceInstance)\n    );\n\n    store.dispatch({ type: ROOT_EFFECTS_INIT });\n  }\n\n  addEffects(effectSourceInstance: any) {\n    this.sources.addEffects(effectSourceInstance);\n  }\n}\n"]}