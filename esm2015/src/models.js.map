{"version":3,"file":"models.js","sourceRoot":"ng://@ngrx/effects/","sources":["src/models.ts"],"names":[],"mappings":";;;;;;;;;AAGA,kCAUC;;;;;;;IALC,gCAAmB;;;;;IAInB,8CAAiC;;;AAGnC,MAAM,OAAO,qBAAqB,GAAqC;IACrE,QAAQ,EAAE,IAAI;IACd,sBAAsB,EAAE,IAAI;CAC7B;;AAED,MAAM,OAAO,0BAA0B,GAAG,0BAA0B;;;;AAEpE,0CAEC;;;;;;;;;AAOD,oCAGC;;;IADC,sCAAmC","sourcesContent":["/**\n * Configures an effect created by `createEffect`.\n */\nexport interface EffectConfig {\n  /**\n   * Determines if the action emitted by the effect is dispatched to the store.\n   * If false, effect does not need to return type `Observable<Action>`.\n   */\n  dispatch?: boolean;\n  /**\n   * Determines if the effect will be resubscribed to if an error occurs in the main actions stream.\n   */\n  useEffectsErrorHandler?: boolean;\n}\n\nexport const DEFAULT_EFFECT_CONFIG: Readonly<Required<EffectConfig>> = {\n  dispatch: true,\n  useEffectsErrorHandler: true,\n};\n\nexport const CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\nexport interface CreateEffectMetadata {\n  [CREATE_EFFECT_METADATA_KEY]: EffectConfig;\n}\n\nexport type EffectPropertyKey<T extends Object> = Exclude<\n  keyof T,\n  keyof Object\n>;\n\nexport interface EffectMetadata<T extends Object>\n  extends Required<EffectConfig> {\n  propertyName: EffectPropertyKey<T>;\n}\n\nexport type EffectsMetadata<T> = {\n  [key in EffectPropertyKey<T>]?: EffectConfig\n};\n"]}