{"version":3,"sources":["modules/effects/effects.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ngrx","effects","tslib","rxjs","operators","ng","core","this","tslib_1","store","CREATE_EFFECT_METADATA_KEY","getCreateEffectMetadata","instance","Object","getOwnPropertyNames","filter","propertyName","hasOwnProperty","map","__assign","getSourceForInstance","getPrototypeOf","METADATA_KEY","getEffectDecoratorMetadata","compose","getEffectMetadataEntries","sourceProto","constructor","getSourceMetadata","reduce","sources","source","concat","mergeEffects","sourceInstance","sourceName","name","observables","_a","dispatch","observable","pipe","ignoreElements","materialize","notification","effect","merge","apply","__spread","Actions","_super","_this","call","Actions_1","__extends","prototype","lift","operator","__decorate","Injectable","__param","Inject","ScannedActionsSubject","__metadata","Observable","onIdentifyEffectsKey","onRunEffectsKey","EffectSources","errorHandler","addEffects","effectSourceInstance","next","toActions","groupBy","mergeMap","source$","effectsInstance","exhaustMap","resolveEffectSource","output","verifyOutput","reporter","reportErrorThrown","kind","handleError","error","reportInvalidActions","action","value","isAction","type","Error","getEffectName","stringify","JSON","dematerialize","ErrorHandler","Store","Subject","mergedEffects$","isOnRunEffects","ngrxOnRunEffects","InjectionToken","ROOT_EFFECTS","FEATURE_EFFECTS","EffectsRunner","effectSources","effectsSubscription","start","subscribe","ngOnDestroy","unsubscribe","ROOT_EFFECTS_INIT","EffectsRootModule","runner","rootEffects","storeRootModule","storeFeatureModule","forEach","NgModule","Optional","Array","StoreRootModule","StoreFeatureModule","EffectsFeatureModule","root","effectSourceGroups","group","EffectsModule","forFeature","featureEffects","ngModule","providers","provide","multi","deps","useFactory","createSourceInstances","forRoot","instances","_i","arguments","length","ɵngrx_modules_effects_effects_c","ɵngrx_modules_effects_effects_a","ɵngrx_modules_effects_effects_b","ɵngrx_modules_effects_effects_f","ɵngrx_modules_effects_effects_e","ɵngrx_modules_effects_effects_d","createEffect","_b","defineProperty","Effect","target","setEffectMetadataEntries","entries","meta","push","getEffectsMetadata","e_1","metadata","__values","_c","done","_d","e_1_1","return","ofType","allowedTypes","some","typeOrActionCreator","mapToAction","configOrProject","errorFn","project","concatMap","complete","undefined","defer","subject","input","index","completed","errored","projectedCount","NotificationKind","ERROR","Notification","NEXT","COMPLETE","n","finalize"],"mappings":";;;;;CAKC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,eAAgBA,QAAQ,QAASA,QAAQ,kBAAmBA,QAAQ,kBAC5J,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,gBAAiB,CAAC,UAAW,QAAS,cAAe,OAAQ,iBAAkB,iBAAkBJ,GAC3HA,IAAzBD,EAASA,GAAUO,MAAsBC,KAAOR,EAAOQ,MAAQ,GAAIR,EAAOQ,KAAKC,QAAU,IAAKT,EAAOU,MAAOV,EAAO,eAAgBA,EAAOW,KAAMX,EAAOW,KAAKC,UAAWZ,EAAOa,GAAGC,MAHtL,CAIEC,KAAM,SAAUb,EAASc,EAASC,EAAON,EAAMC,EAAWE,GAAQ,aAEhE,IAAII,EAA6B,2BAWjC,SAASC,EAAwBC,GAW7B,OAVoBC,OAAOC,oBAAoBF,GAE1CG,OAAO,SAAUC,GAClB,OAAOJ,EAASI,IACZJ,EAASI,GAAcC,eAAeP,KAEzCQ,IAAI,SAAUF,GAEf,OAAOR,EAAQW,SAAS,CAAEH,aAAcA,GADzBJ,EAASI,GAAcN,MAM9C,SAASU,EAAqBR,GAC1B,OAAOC,OAAOQ,eAAeT,GAGjC,IAAIU,EAAe,oBAQnB,SAASC,EAA2BX,GAEhC,OADwBH,EAAMe,QAAQC,EAA0BL,EAAxCX,CAA8DG,GAU1F,SAASa,EAAyBC,GAC9B,OAAOA,EAAYC,YAAYV,eAAeK,GACxCI,EAAYC,YAAYL,GACxB,GAqBV,SAASM,EAAkBhB,GAKvB,MAJc,CACVW,EACAZ,GAEWkB,OAAO,SAAUC,EAASC,GAAU,OAAOD,EAAQE,OAAOD,EAAOnB,KAAe,IAGnG,SAASqB,EAAaC,GAClB,IAAIC,EAAaf,EAAqBc,GAAgBP,YAAYS,KAC9DC,EAAcT,EAAkBM,GAAgBhB,IAAI,SAAUoB,GAC9D,IAAItB,EAAesB,EAAGtB,aAAcuB,EAAWD,EAAGC,SAC9CC,EAAqD,mBAAjCN,EAAelB,GACjCkB,EAAelB,KACfkB,EAAelB,GACrB,OAAiB,IAAbuB,EACOC,EAAWC,KAAKrC,EAAUsC,kBAEjBF,EAAWC,KAAKrC,EAAUuC,eACzBF,KAAKrC,EAAUc,IAAI,SAAU0B,GAAgB,MAAO,CACrEC,OAAQX,EAAelB,GACvB4B,aAAcA,EACd5B,aAAcA,EACdmB,WAAYA,EACZD,eAAgBA,QAGxB,OAAO/B,EAAK2C,MAAMC,WAAM,EAAQvC,EAAQwC,SAASX,IAGrD,IAAIY,EAAyB,SAAUC,GAEnC,SAASD,EAAQlB,GACb,IAAIoB,EAAQD,EAAOE,KAAK7C,OAASA,KAIjC,OAHIwB,IACAoB,EAAMpB,OAASA,GAEZoB,EASX,IAAIE,EAMJ,OArBA7C,EAAQ8C,UAAUL,EAASC,GAQ3BG,EAAYJ,EACZA,EAAQM,UAAUC,KAAO,SAAUC,GAC/B,IAAIjB,EAAa,IAAIa,EAGrB,OAFAb,EAAWT,OAASxB,KACpBiC,EAAWiB,SAAWA,EACfjB,GAGDa,EAAY7C,EAAQkD,WAAW,CACrCpD,EAAKqD,aACLnD,EAAQoD,QAAQ,EAAGtD,EAAKuD,OAAOpD,EAAMqD,wBACrCtD,EAAQuD,WAAW,oBAAqB,CAAC5D,EAAK6D,cAC/Cf,GArBqB,CAuB1B9C,EAAK6D,YAqDHC,EAAuB,wBACvBC,EAAkB,mBAGlBC,EAA+B,SAAUjB,GAEzC,SAASiB,EAAcC,EAAc3D,GACjC,IAAI0C,EAAQD,EAAOE,KAAK7C,OAASA,KAGjC,OAFA4C,EAAMiB,aAAeA,EACrBjB,EAAM1C,MAAQA,EACP0C,EA2BX,OAhCA3C,EAAQ8C,UAAUa,EAAejB,GAOjCiB,EAAcZ,UAAUc,WAAa,SAAUC,GAC3C/D,KAAKgE,KAAKD,GAXE,sBAYSA,GAC8B,mBAAxCA,EAAkC,mBACzC/D,KAAKE,MAAM8B,SAAS+B,EAAkC,sBAM9DH,EAAcZ,UAAUiB,UAAY,WAChC,IAAIrB,EAAQ5C,KACZ,OAAOA,KAAKkC,KAAKrC,EAAUqE,QAAQrD,GAAuBhB,EAAUsE,SAAS,SAAUC,GAAW,OAAOA,EAAQlC,KAAKrC,EAAUqE,QAAQG,MAAuBxE,EAAUsE,SAAS,SAAUC,GACxL,OAAOA,EAAQlC,KAAKrC,EAAUyE,WAAWC,GAAsB1E,EAAUc,IAAI,SAAU6D,GAEnF,OA9DhB,SAASC,EAAaD,EAAQE,IAI9B,SAASC,EAAkBH,EAAQE,GACE,MAA7BF,EAAOnC,aAAauC,MACpBF,EAASG,YAAYL,EAAOnC,aAAayC,OAL7CH,CAAkBH,EAAQE,GAQ9B,SAASK,EAAqBP,EAAQE,GAClC,GAAiC,MAA7BF,EAAOnC,aAAauC,KAAc,CAClC,IAAII,EAASR,EAAOnC,aAAa4C,OAOzC,SAASC,EAASF,GACd,OAAOA,GAAUA,EAAOG,MAA+B,iBAAhBH,EAAOG,KAPnBD,CAASF,IAE5BN,EAASG,YAAY,IAAIO,MAAM,UAO3C,SAASC,EAActD,GACnB,IAAItB,EAAesB,EAAGtB,aAEtB,MAAO,IAF8EsB,EAAGH,WAE7D,IAAMnB,GADsB,mBADFsB,EAAGJ,eACnBlB,GACuB,KAAO,IAAM,IAVtB4E,CAAcb,GAAU,kCAY/E,SAASc,EAAUN,GACf,IACI,OAAOO,KAAKD,UAAUN,GAE1B,MAAOjD,GACH,OAAOiD,GAjBoGM,CAAUN,MAZzHD,CAAqBP,EAAQE,GA2DjBD,CAAaD,EAAQ5B,EAAMiB,cACpBW,EAAOnC,eACdxC,EAAUW,OAAO,SAAU6B,GAC3B,MAA6B,MAAtBA,EAAauC,OACpB/E,EAAU2F,qBAGNvF,EAAQkD,WAAW,CAC/BpD,EAAKqD,aACLnD,EAAQuD,WAAW,oBAAqB,CAACzD,EAAK0F,aAAcvF,EAAMwF,SACnE9B,GAhC2B,CAkChChE,EAAK+F,SACP,SAAStB,EAAgB1C,GACrB,OAAI+B,KAAwB/B,GACwB,mBAAzCA,EAAe+B,GACf/B,EAAe+B,KAEnB,GAEX,SAASa,EAAoB5C,GACzB,IAAIiE,EAAiBlE,EAAaC,GAClC,OAKJ,SAASkE,EAAelE,GACpB,IAAIH,EAASX,EAAqBc,GAClC,OAAQgC,KAAmBnC,GAA6C,mBAA5BA,EAAOmC,GAP/CkC,CAAelE,GACRA,EAAemE,iBAAiBF,GAEpCA,EAOa,IAAI7F,EAAKgG,eAAe,mCAAhD,IACIC,EAAe,IAAIjG,EAAKgG,eAAe,8BACvCE,EAAkB,IAAIlG,EAAKgG,eAAe,iCAE1CG,EAA+B,WAC/B,SAASA,EAAcC,EAAejG,GAClCF,KAAKmG,cAAgBA,EACrBnG,KAAKE,MAAQA,EACbF,KAAKoG,oBAAsB,KAoB/B,OAlBAF,EAAclD,UAAUqD,MAAQ,WACvBrG,KAAKoG,sBACNpG,KAAKoG,oBAAsBpG,KAAKmG,cAC3BlC,YACAqC,UAAUtG,KAAKE,SAG5BgG,EAAclD,UAAUuD,YAAc,WAC9BvG,KAAKoG,sBACLpG,KAAKoG,oBAAoBI,cACzBxG,KAAKoG,oBAAsB,OAGnBnG,EAAQkD,WAAW,CAC/BpD,EAAKqD,aACLnD,EAAQuD,WAAW,oBAAqB,CAACI,EACrC1D,EAAMwF,SACXQ,GAvB2B,GA2B9BO,EAAoB,qBACpBC,EAAmC,WACnC,SAASA,EAAkBnF,EAASoF,EAAQzG,EAAO0G,EAAaC,EAAiBC,GAC7E9G,KAAKuB,QAAUA,EACfoF,EAAON,QACPO,EAAYG,QAAQ,SAAUhD,GAC1B,OAAOxC,EAAQuC,WAAWC,KAE9B7D,EAAM8B,SAAS,CAAEmD,KAAMsB,IAe3B,OAbAC,EAAkB1D,UAAUc,WAAa,SAAUC,GAC/C/D,KAAKuB,QAAQuC,WAAWC,IAER9D,EAAQkD,WAAW,CACnCpD,EAAKiH,SAAS,IACd/G,EAAQoD,QAAQ,EAAGtD,EAAKuD,OAAO0C,IAC/B/F,EAAQoD,QAAQ,EAAGtD,EAAKkH,YACxBhH,EAAQoD,QAAQ,EAAGtD,EAAKkH,YACxBhH,EAAQuD,WAAW,oBAAqB,CAACI,EACrCsC,EACAhG,EAAMwF,MAAOwB,MAAOhH,EAAMiH,gBAC1BjH,EAAMkH,sBACXV,GArB+B,GAyBlCW,EAAsC,WAgBtC,OARuBpH,EAAQkD,WAAW,CACtCpD,EAAKiH,SAAS,IACd/G,EAAQoD,QAAQ,EAAGtD,EAAKuD,OAAO2C,IAC/BhG,EAAQoD,QAAQ,EAAGtD,EAAKkH,YACxBhH,EAAQoD,QAAQ,EAAGtD,EAAKkH,YACxBhH,EAAQuD,WAAW,oBAAqB,CAACkD,EAAmBQ,MAAOhH,EAAMiH,gBACrEjH,EAAMkH,sBAbd,SAASC,EAAqBC,EAAMC,EAAoBV,EAAiBC,GACrES,EAAmBR,QAAQ,SAAUS,GACjC,OAAOA,EAAMT,QAAQ,SAAUhD,GAC3B,OAAOuD,EAAKxD,WAAWC,SAJE,GAmBrC0D,EAA+B,WAC/B,SAASA,KAmCT,OAjCAA,EAAcC,WAAa,SAAUC,GACjC,MAAO,CACHC,SAAUP,EACVQ,UAAW,CACPF,EACA,CACIG,QAAS7B,EACT8B,OAAO,EACPC,KAAML,EACNM,WAAYC,MAK5BT,EAAcU,QAAU,SAAUvB,GAC9B,MAAO,CACHgB,SAAUlB,EACVmB,UAAW,CACP3B,EACAtC,EACAlB,EACAkE,EACA,CACIkB,QAAS9B,EACTgC,KAAMpB,EACNqB,WAAYC,MAKZjI,EAAQkD,WAAW,CAC/BpD,EAAKiH,SAAS,KACfS,GAnC2B,GAsClC,SAASS,IAEL,IADA,IAAIE,EAAY,GACPC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAUC,GAAMC,UAAUD,GAE9B,OAAOD,EA0DXjJ,EAAQqJ,gCAAkCnB,EAC1ClI,EAAQsJ,gCAAkCP,EAC1C/I,EAAQuJ,gCAAkChC,EAC1CvH,EAAQwJ,gCAAkCzC,EAC1C/G,EAAQyJ,gCAAkC3C,EAC1C9G,EAAQ0J,gCAAkC7C,EAC1C7G,EAAQ2J,aAlaR,SAASA,EAAatH,EAAQO,GAC1B,IAAIgH,QAAa,IAAPhH,EAAgB,GAAKA,GAAIC,SAAUA,OAAkB,IAAP+G,GAAuBA,EAC3EzG,EAASd,IAMb,OALAlB,OAAO0I,eAAe1G,EAAQnC,EAA4B,CACtD8E,MAAO,CACHjD,SAAUA,KAGXM,GA2ZXnD,EAAQ8J,OAtYR,SAASA,EAAOlH,GACZ,IAAIgH,QAAa,IAAPhH,EAAgB,GAAKA,GAAIC,SAAUA,OAAkB,IAAP+G,GAAuBA,EAC/E,OAAO,SAAUG,EAAQzI,IAS7B,SAAS0I,EAAyBhI,EAAaiI,GAC3C,IAAIhI,EAAcD,EAAYC,YAC1BiI,EAAOjI,EAAYV,eAAeK,GAChCK,EAAYL,GACZT,OAAO0I,eAAe5H,EAAaL,EAAc,CAAEkE,MAAO,KAAMlE,GACtEmG,MAAMlE,UAAUsG,KAAK9G,MAAM6G,EAAMD,GAZ7BD,CAAyBD,EAAQ,CADlB,CAAEzI,aAAcA,EAAcuB,SAAUA,OAoY/D7C,EAAQoK,mBA/WR,SAASA,EAAmBlJ,GACxB,IAAImJ,EAAKzH,EACL0H,EAAW,GACf,IACI,IAAK,IAAIV,EAAK9I,EAAQyJ,SAASrI,EAAkBhB,IAAYsJ,EAAKZ,EAAG/E,QAAS2F,EAAGC,KAAMD,EAAKZ,EAAG/E,OAAQ,CACnG,IAAI6F,EAAKF,EAAG1E,MACZwE,EADkCI,EAAGpJ,cACZ,CAAEuB,SADmC6H,EAAG7H,WAIzE,MAAO8H,GAASN,EAAM,CAAE1E,MAAOgF,GAC/B,QACI,IACQH,IAAOA,EAAGC,OAAS7H,EAAKgH,EAAGgB,SAAShI,EAAGc,KAAKkG,GAEpD,QAAU,GAAIS,EAAK,MAAMA,EAAI1E,OAEjC,OAAO2E,GAgWXtK,EAAQuC,aAAeA,EACvBvC,EAAQuD,QAAUA,EAClBvD,EAAQ6K,OA1SR,SAASA,IAEL,IADA,IAAIC,EAAe,GACV5B,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpC4B,EAAa5B,GAAMC,UAAUD,GAEjC,OAAOxI,EAAUW,OAAO,SAAUwE,GAC9B,OAAOiF,EAAaC,KAAK,SAAUC,GAC/B,MAAmC,iBAAxBA,EAEAA,IAAwBnF,EAAOG,KAGnCgF,EAAoBhF,OAASH,EAAOG,UA+RvDhG,EAAQsI,cAAgBA,EACxBtI,EAAQyE,cAAgBA,EACxBzE,EAAQsH,kBAAoBA,EAC5BtH,EAAQiL,YAtER,SAASA,EAETC,EAAiBC,GACb,IAAIvI,EAAgC,mBAApBsI,EACV,CACEE,QAASF,EACTvF,MAAOwF,EACPpH,SAAUrD,EAAU2K,UACpBC,cAAUC,EACVlE,iBAAakE,GAEfzK,EAAQW,SAAS,GAAIyJ,EAAiB,CAAEnH,SAAUmH,EAAgBnH,UAAYrD,EAAU2K,YAAcD,EAAUxI,EAAGwI,QAASzF,EAAQ/C,EAAG+C,MAAO2F,EAAW1I,EAAG0I,SAAUvH,EAAWnB,EAAGmB,SAAUsD,EAAczE,EAAGyE,YACrN,OAAO,SAAUhF,GACb,OAAO5B,EAAK+K,MAAM,WACd,IAAIC,EAAU,IAAIhL,EAAK+F,QACvB,OAAO/F,EAAK2C,MAAMf,EAAOU,KAAKgB,EAAS,SAAU2H,EAAOC,GACpD,OAAOlL,EAAK+K,MAAM,WACd,IAAII,GAAY,EACZC,GAAU,EACVC,EAAiB,EACrB,OAAOV,EAAQM,EAAOC,GAAO5I,KAAKrC,EAAUuC,cAAevC,EAAUc,IAAI,SAAU0B,GAC/E,OAAQA,EAAauC,MACjB,KAAKhF,EAAKsL,iBAAiBC,MAEvB,OADAH,GAAU,EACH,IAAIpL,EAAKwL,aAAaxL,EAAKsL,iBAAiBG,KAAMvG,EAAMzC,EAAayC,MAAO+F,IACvF,KAAKjL,EAAKsL,iBAAiBI,SAEvB,OADAP,GAAY,EACLN,EACD,IAAI7K,EAAKwL,aAAaxL,EAAKsL,iBAAiBG,KAAMZ,EAASQ,EAAgBJ,SAC3EH,EACV,QAEI,QADEO,EACK5I,KAEfxC,EAAUW,OAAO,SAAU+K,GAAK,OAAY,MAALA,IAAe1L,EAAU2F,gBAAiB3F,EAAU2L,SAAS,WAC/FT,GAAcC,IAAWxE,GAC1BoE,EAAQ5G,KAAKwC,EAAYyE,EAAgBJ,YAIpDD,OAgCjBtK,OAAO0I,eAAe7J,EAAS,aAAc,CAAE8F,OAAO","sourcesContent":["/**\n * @license NgRx 8.0.0-beta.2\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/effects', ['exports', 'tslib', '@ngrx/store', 'rxjs', 'rxjs/operators', '@angular/core'], factory) :\n    (global = global || self, factory((global.ngrx = global.ngrx || {}, global.ngrx.effects = {}), global.tslib, global['@ngrx/store'], global.rxjs, global.rxjs.operators, global.ng.core));\n}(this, function (exports, tslib_1, store, rxjs, operators, core) { 'use strict';\n\n    var CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n    function createEffect(source, _a) {\n        var _b = (_a === void 0 ? {} : _a).dispatch, dispatch = _b === void 0 ? true : _b;\n        var effect = source();\n        Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n            value: {\n                dispatch: dispatch,\n            },\n        });\n        return effect;\n    }\n    function getCreateEffectMetadata(instance) {\n        var propertyNames = Object.getOwnPropertyNames(instance);\n        var metadata = propertyNames\n            .filter(function (propertyName) {\n            return instance[propertyName] &&\n                instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY);\n        })\n            .map(function (propertyName) {\n            var metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n            return tslib_1.__assign({ propertyName: propertyName }, metaData);\n        });\n        return metadata;\n    }\n\n    function getSourceForInstance(instance) {\n        return Object.getPrototypeOf(instance);\n    }\n\n    var METADATA_KEY = '__@ngrx/effects__';\n    function Effect(_a) {\n        var _b = (_a === void 0 ? {} : _a).dispatch, dispatch = _b === void 0 ? true : _b;\n        return function (target, propertyName) {\n            var metadata = { propertyName: propertyName, dispatch: dispatch };\n            setEffectMetadataEntries(target, [metadata]);\n        };\n    }\n    function getEffectDecoratorMetadata(instance) {\n        var effectsDecorators = store.compose(getEffectMetadataEntries, getSourceForInstance)(instance);\n        return effectsDecorators;\n    }\n    function setEffectMetadataEntries(sourceProto, entries) {\n        var constructor = sourceProto.constructor;\n        var meta = constructor.hasOwnProperty(METADATA_KEY)\n            ? constructor[METADATA_KEY]\n            : Object.defineProperty(constructor, METADATA_KEY, { value: [] })[METADATA_KEY];\n        Array.prototype.push.apply(meta, entries);\n    }\n    function getEffectMetadataEntries(sourceProto) {\n        return sourceProto.constructor.hasOwnProperty(METADATA_KEY)\n            ? sourceProto.constructor[METADATA_KEY]\n            : [];\n    }\n\n    function getEffectsMetadata(instance) {\n        var e_1, _a;\n        var metadata = {};\n        try {\n            for (var _b = tslib_1.__values(getSourceMetadata(instance)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = _c.value, propertyName = _d.propertyName, dispatch = _d.dispatch;\n                metadata[propertyName] = { dispatch: dispatch };\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return metadata;\n    }\n    function getSourceMetadata(instance) {\n        var effects = [\n            getEffectDecoratorMetadata,\n            getCreateEffectMetadata,\n        ];\n        return effects.reduce(function (sources, source) { return sources.concat(source(instance)); }, []);\n    }\n\n    function mergeEffects(sourceInstance) {\n        var sourceName = getSourceForInstance(sourceInstance).constructor.name;\n        var observables = getSourceMetadata(sourceInstance).map(function (_a) {\n            var propertyName = _a.propertyName, dispatch = _a.dispatch;\n            var observable = typeof sourceInstance[propertyName] === 'function'\n                ? sourceInstance[propertyName]()\n                : sourceInstance[propertyName];\n            if (dispatch === false) {\n                return observable.pipe(operators.ignoreElements());\n            }\n            var materialized$ = observable.pipe(operators.materialize());\n            return materialized$.pipe(operators.map(function (notification) { return ({\n                effect: sourceInstance[propertyName],\n                notification: notification,\n                propertyName: propertyName,\n                sourceName: sourceName,\n                sourceInstance: sourceInstance,\n            }); }));\n        });\n        return rxjs.merge.apply(void 0, tslib_1.__spread(observables));\n    }\n\n    var Actions = /** @class */ (function (_super) {\n        tslib_1.__extends(Actions, _super);\n        function Actions(source) {\n            var _this = _super.call(this) || this;\n            if (source) {\n                _this.source = source;\n            }\n            return _this;\n        }\n        Actions_1 = Actions;\n        Actions.prototype.lift = function (operator) {\n            var observable = new Actions_1();\n            observable.source = this;\n            observable.operator = operator;\n            return observable;\n        };\n        var Actions_1;\n        Actions = Actions_1 = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__param(0, core.Inject(store.ScannedActionsSubject)),\n            tslib_1.__metadata(\"design:paramtypes\", [rxjs.Observable])\n        ], Actions);\n        return Actions;\n    }(rxjs.Observable));\n    function ofType() {\n        var allowedTypes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            allowedTypes[_i] = arguments[_i];\n        }\n        return operators.filter(function (action) {\n            return allowedTypes.some(function (typeOrActionCreator) {\n                if (typeof typeOrActionCreator === 'string') {\n                    // Comparing the string to type\n                    return typeOrActionCreator === action.type;\n                }\n                // We are filtering by ActionCreator\n                return typeOrActionCreator.type === action.type;\n            });\n        });\n    }\n\n    function verifyOutput(output, reporter) {\n        reportErrorThrown(output, reporter);\n        reportInvalidActions(output, reporter);\n    }\n    function reportErrorThrown(output, reporter) {\n        if (output.notification.kind === 'E') {\n            reporter.handleError(output.notification.error);\n        }\n    }\n    function reportInvalidActions(output, reporter) {\n        if (output.notification.kind === 'N') {\n            var action = output.notification.value;\n            var isInvalidAction = !isAction(action);\n            if (isInvalidAction) {\n                reporter.handleError(new Error(\"Effect \" + getEffectName(output) + \" dispatched an invalid action: \" + stringify(action)));\n            }\n        }\n    }\n    function isAction(action) {\n        return action && action.type && typeof action.type === 'string';\n    }\n    function getEffectName(_a) {\n        var propertyName = _a.propertyName, sourceInstance = _a.sourceInstance, sourceName = _a.sourceName;\n        var isMethod = typeof sourceInstance[propertyName] === 'function';\n        return \"\\\"\" + sourceName + \".\" + propertyName + (isMethod ? '()' : '') + \"\\\"\";\n    }\n    function stringify(action) {\n        try {\n            return JSON.stringify(action);\n        }\n        catch (_a) {\n            return action;\n        }\n    }\n\n    var onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\n    var onRunEffectsKey = 'ngrxOnRunEffects';\n    var onInitEffects = 'ngrxOnInitEffects';\n\n    var EffectSources = /** @class */ (function (_super) {\n        tslib_1.__extends(EffectSources, _super);\n        function EffectSources(errorHandler, store) {\n            var _this = _super.call(this) || this;\n            _this.errorHandler = errorHandler;\n            _this.store = store;\n            return _this;\n        }\n        EffectSources.prototype.addEffects = function (effectSourceInstance) {\n            this.next(effectSourceInstance);\n            if (onInitEffects in effectSourceInstance &&\n                typeof effectSourceInstance[onInitEffects] === 'function') {\n                this.store.dispatch(effectSourceInstance[onInitEffects]());\n            }\n        };\n        /**\n         * @internal\n         */\n        EffectSources.prototype.toActions = function () {\n            var _this = this;\n            return this.pipe(operators.groupBy(getSourceForInstance), operators.mergeMap(function (source$) { return source$.pipe(operators.groupBy(effectsInstance)); }), operators.mergeMap(function (source$) {\n                return source$.pipe(operators.exhaustMap(resolveEffectSource), operators.map(function (output) {\n                    verifyOutput(output, _this.errorHandler);\n                    return output.notification;\n                }), operators.filter(function (notification) {\n                    return notification.kind === 'N';\n                }), operators.dematerialize());\n            }));\n        };\n        EffectSources = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [core.ErrorHandler, store.Store])\n        ], EffectSources);\n        return EffectSources;\n    }(rxjs.Subject));\n    function effectsInstance(sourceInstance) {\n        if (onIdentifyEffectsKey in sourceInstance &&\n            typeof sourceInstance[onIdentifyEffectsKey] === 'function') {\n            return sourceInstance[onIdentifyEffectsKey]();\n        }\n        return '';\n    }\n    function resolveEffectSource(sourceInstance) {\n        var mergedEffects$ = mergeEffects(sourceInstance);\n        if (isOnRunEffects(sourceInstance)) {\n            return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n        }\n        return mergedEffects$;\n    }\n    function isOnRunEffects(sourceInstance) {\n        var source = getSourceForInstance(sourceInstance);\n        return (onRunEffectsKey in source && typeof source[onRunEffectsKey] === 'function');\n    }\n\n    var IMMEDIATE_EFFECTS = new core.InjectionToken('ngrx/effects: Immediate Effects');\n    var ROOT_EFFECTS = new core.InjectionToken('ngrx/effects: Root Effects');\n    var FEATURE_EFFECTS = new core.InjectionToken('ngrx/effects: Feature Effects');\n\n    var EffectsRunner = /** @class */ (function () {\n        function EffectsRunner(effectSources, store) {\n            this.effectSources = effectSources;\n            this.store = store;\n            this.effectsSubscription = null;\n        }\n        EffectsRunner.prototype.start = function () {\n            if (!this.effectsSubscription) {\n                this.effectsSubscription = this.effectSources\n                    .toActions()\n                    .subscribe(this.store);\n            }\n        };\n        EffectsRunner.prototype.ngOnDestroy = function () {\n            if (this.effectsSubscription) {\n                this.effectsSubscription.unsubscribe();\n                this.effectsSubscription = null;\n            }\n        };\n        EffectsRunner = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [EffectSources,\n                store.Store])\n        ], EffectsRunner);\n        return EffectsRunner;\n    }());\n\n    var ROOT_EFFECTS_INIT = '@ngrx/effects/init';\n    var EffectsRootModule = /** @class */ (function () {\n        function EffectsRootModule(sources, runner, store, rootEffects, storeRootModule, storeFeatureModule) {\n            this.sources = sources;\n            runner.start();\n            rootEffects.forEach(function (effectSourceInstance) {\n                return sources.addEffects(effectSourceInstance);\n            });\n            store.dispatch({ type: ROOT_EFFECTS_INIT });\n        }\n        EffectsRootModule.prototype.addEffects = function (effectSourceInstance) {\n            this.sources.addEffects(effectSourceInstance);\n        };\n        EffectsRootModule = tslib_1.__decorate([\n            core.NgModule({}),\n            tslib_1.__param(3, core.Inject(ROOT_EFFECTS)),\n            tslib_1.__param(4, core.Optional()),\n            tslib_1.__param(5, core.Optional()),\n            tslib_1.__metadata(\"design:paramtypes\", [EffectSources,\n                EffectsRunner,\n                store.Store, Array, store.StoreRootModule,\n                store.StoreFeatureModule])\n        ], EffectsRootModule);\n        return EffectsRootModule;\n    }());\n\n    var EffectsFeatureModule = /** @class */ (function () {\n        function EffectsFeatureModule(root, effectSourceGroups, storeRootModule, storeFeatureModule) {\n            effectSourceGroups.forEach(function (group) {\n                return group.forEach(function (effectSourceInstance) {\n                    return root.addEffects(effectSourceInstance);\n                });\n            });\n        }\n        EffectsFeatureModule = tslib_1.__decorate([\n            core.NgModule({}),\n            tslib_1.__param(1, core.Inject(FEATURE_EFFECTS)),\n            tslib_1.__param(2, core.Optional()),\n            tslib_1.__param(3, core.Optional()),\n            tslib_1.__metadata(\"design:paramtypes\", [EffectsRootModule, Array, store.StoreRootModule,\n                store.StoreFeatureModule])\n        ], EffectsFeatureModule);\n        return EffectsFeatureModule;\n    }());\n\n    var EffectsModule = /** @class */ (function () {\n        function EffectsModule() {\n        }\n        EffectsModule.forFeature = function (featureEffects) {\n            return {\n                ngModule: EffectsFeatureModule,\n                providers: [\n                    featureEffects,\n                    {\n                        provide: FEATURE_EFFECTS,\n                        multi: true,\n                        deps: featureEffects,\n                        useFactory: createSourceInstances,\n                    },\n                ],\n            };\n        };\n        EffectsModule.forRoot = function (rootEffects) {\n            return {\n                ngModule: EffectsRootModule,\n                providers: [\n                    EffectsRunner,\n                    EffectSources,\n                    Actions,\n                    rootEffects,\n                    {\n                        provide: ROOT_EFFECTS,\n                        deps: rootEffects,\n                        useFactory: createSourceInstances,\n                    },\n                ],\n            };\n        };\n        EffectsModule = tslib_1.__decorate([\n            core.NgModule({})\n        ], EffectsModule);\n        return EffectsModule;\n    }());\n    function createSourceInstances() {\n        var instances = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            instances[_i] = arguments[_i];\n        }\n        return instances;\n    }\n\n    function mapToAction(\n    /** Allow to take either config object or project/error functions */\n    configOrProject, errorFn) {\n        var _a = typeof configOrProject === 'function'\n            ? {\n                project: configOrProject,\n                error: errorFn,\n                operator: operators.concatMap,\n                complete: undefined,\n                unsubscribe: undefined,\n            }\n            : tslib_1.__assign({}, configOrProject, { operator: configOrProject.operator || operators.concatMap }), project = _a.project, error = _a.error, complete = _a.complete, operator = _a.operator, unsubscribe = _a.unsubscribe;\n        return function (source) {\n            return rxjs.defer(function () {\n                var subject = new rxjs.Subject();\n                return rxjs.merge(source.pipe(operator(function (input, index) {\n                    return rxjs.defer(function () {\n                        var completed = false;\n                        var errored = false;\n                        var projectedCount = 0;\n                        return project(input, index).pipe(operators.materialize(), operators.map(function (notification) {\n                            switch (notification.kind) {\n                                case rxjs.NotificationKind.ERROR:\n                                    errored = true;\n                                    return new rxjs.Notification(rxjs.NotificationKind.NEXT, error(notification.error, input));\n                                case rxjs.NotificationKind.COMPLETE:\n                                    completed = true;\n                                    return complete\n                                        ? new rxjs.Notification(rxjs.NotificationKind.NEXT, complete(projectedCount, input))\n                                        : undefined;\n                                default:\n                                    ++projectedCount;\n                                    return notification;\n                            }\n                        }), operators.filter(function (n) { return n != null; }), operators.dematerialize(), operators.finalize(function () {\n                            if (!completed && !errored && unsubscribe) {\n                                subject.next(unsubscribe(projectedCount, input));\n                            }\n                        }));\n                    });\n                })), subject);\n            });\n        };\n    }\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_effects_effects_c = EffectsFeatureModule;\n    exports.ɵngrx_modules_effects_effects_a = createSourceInstances;\n    exports.ɵngrx_modules_effects_effects_b = EffectsRootModule;\n    exports.ɵngrx_modules_effects_effects_f = EffectsRunner;\n    exports.ɵngrx_modules_effects_effects_e = FEATURE_EFFECTS;\n    exports.ɵngrx_modules_effects_effects_d = ROOT_EFFECTS;\n    exports.createEffect = createEffect;\n    exports.Effect = Effect;\n    exports.getEffectsMetadata = getEffectsMetadata;\n    exports.mergeEffects = mergeEffects;\n    exports.Actions = Actions;\n    exports.ofType = ofType;\n    exports.EffectsModule = EffectsModule;\n    exports.EffectSources = EffectSources;\n    exports.ROOT_EFFECTS_INIT = ROOT_EFFECTS_INIT;\n    exports.mapToAction = mapToAction;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=effects.umd.js.map\n"]}